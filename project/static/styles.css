
body
{
    background-color: rgb(5, 6, 45) ;
    color: #FF6363;
    font-family: Courier;

}

h1{
  border: 1px solid #FF6363;
  font-size: 3em;
}


.wrapper {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 10px;
  grid-auto-rows: minmax(100px, auto);
  justify-content: center;
  border: 1px solid red
}

.left {
  position: relative;
  text-align: center;
  grid-column: 1;
  grid-row: 1 / 5;
  border: 1px solid green
}

.right {
  position: relative;
  text-align: center;
  grid-column: 3;
  grid-row: 1 / 5;
  border: 1px solid blue
}

.middle {
  position: relative;
  text-align: center;
  grid-column: 2;
  grid-row: 1 / 5;
  border: 1px solid purple
}

.center {
    margin: 0;
    position: absolute;
    top: 40%;
    left: 50%;
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    border: 1px solid yellow
  }


  /* button */

button {
    align-items: center;
    background-image: linear-gradient(144deg,#FF9A76, #FF6363 50%,#FF1E62);
    border: 0;
    border-radius: 8px;
    box-shadow: rgba(255, 154, 118, 0.2) 0 15px 30px -5px;
    box-sizing: border-box;
    color: #FFFFFF;
    display: flex;
    font-family: Phantomsans, sans-serif;
    font-size: 18px;
    justify-content: center;
    line-height: 1em;
    max-width: 100%;
    min-width: 280px;
    padding: 3px;
    text-decoration: none;
    user-select: none;
    -webkit-user-select: none;
    touch-action: manipulation;
    white-space: nowrap;
    cursor: pointer;
    transition: all .3s;
  }

  button:active,
  button:hover {
    outline: 0;
  }

  button span {
    background-color: rgb(5, 6, 45);
    padding: 16px 24px;
    border-radius: 6px;
    width: 100%;
    height: 100%;
    transition: 300ms;
  }

  button:hover span {
    background: none;
  }

  button:active {
    transform: scale(0.9);
  }






/*select*/
select {

  /* styling */
  background-color: white;
  border: thin solid #FF6363;
  border-radius: 6px;
  display: inline-block;
  font: inherit;
  line-height: 1.5em;
  padding: 0.5em 3.5em 0.5em 1em;

  /* reset */

  margin: 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-appearance: none;
  -moz-appearance: none;
}

select.round {
  background-image:
    linear-gradient(45deg, transparent 50%, #FF6363 50%),
    linear-gradient(135deg, #FF6363 50%, transparent 50%),
    radial-gradient(rgb(5, 6, 45) 70%, transparent 72%);
  background-position:
    calc(100% - 20px) calc(1em + 2px),
    calc(100% - 15px) calc(1em + 2px),
    calc(100% - .5em) .5em;
  background-size:
    5px 5px,
    5px 5px,
    1.5em 1.5em;
  background-repeat: no-repeat;
}

select.round:focus {
  background-image:
    linear-gradient(45deg, rgb(5, 6, 45) 50%, transparent 50%),
    linear-gradient(135deg, transparent 50%, rgb(5, 6, 45) 50%),
    radial-gradient(#FF6363 70%, transparent 72%);
  background-position:
    calc(100% - 15px) 1em,
    calc(100% - 20px) 1em,
    calc(100% - .5em) .5em;
  background-size:
    5px 5px,
    5px 5px,
    1.5em 1.5em;
  background-repeat: no-repeat;
  border-color: #FF6363;
  outline: 0;
}


/*text field*/
.input {
	// needs to be relative so the :focus span is positioned correctly
	position: relative;

	// bigger font size for demo purposes
	font-size: 1.5em;

	// the border gradient
	background: linear-gradient(21deg, #ff6363, rgb(5, 6, 45));

	// the width of the input border
	padding: 3px;

	// we want inline fields by default
	display: inline-block;

	// we want rounded corners no matter the size of the field
	border-radius: 9999em;

	// style of the actual input field
	*:not(span) {
		position: relative;
		display: inherit;
		border-radius: inherit;
		margin: 0;
		border: none;
		outline: none;
		padding: 0 0.325em;
		z-index: 1; // needs to be above the :focus span

		// summon fancy shadow styles when focussed
		&:focus + span {
			opacity: 1;
			transform: scale(1);
		}
	}

	// we don't animate box-shadow directly as that can't be done on the GPU, only animate opacity and transform for high performance animations.
	span {
		transform: scale(0.993, 0.94); // scale it down just a little bit
		transition: transform 0.5s, opacity 0.25s;
		opacity: 0; // is hidden by default

		position: absolute;
		z-index: 0; // needs to be below the field (would block input otherwise)
		margin: 4px; // a bit bigger than .input padding, this prevents background color pixels shining through
		left: 0;
		top: 0;
		right: 0;
		bottom: 0;
		border-radius: inherit;
		pointer-events: none; // this allows the user to click through this element, as the shadow is rather wide it might overlap with other fields and we don't want to block those.

		// fancy shadow styles
		box-shadow: inset 0 0 0 3px #fff, 0 0 0 4px #fff, 3px -3px 30px #ff6363,
			-3px 3px 30px #ff6363;
	}
}

